# name: Java CI with Maven

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
#     branches: [ "main" ]

# jobs:
#   compile:
#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#     runs-on: ${{ matrix.os }}
#     steps:
#       - uses: actions/checkout@v4
#       - name: Set up JDK 17
#         uses: actions/setup-java@v4
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#           cache: maven
#       - name: Compile Application
#         run: |
#           echo "Compiling the application..."
#           mvn clean compile
#         shell: bash

#   unit_tests:
#     needs: compile
#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#     runs-on: ${{ matrix.os }}
#     steps:
#       - uses: actions/checkout@v4
#       - name: Set up JDK 17
#         uses: actions/setup-java@v4
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#           cache: maven
#       - name: Run Unit Tests
#         run: |
#           echo "Running unit tests..."
#           mvn test
#         shell: bash

#   package:
#     needs: unit_tests
#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#     runs-on: ${{ matrix.os }}
#     steps:
#       - uses: actions/checkout@v4
#       - name: Set up JDK 17
#         uses: actions/setup-java@v4
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#           cache: maven
#       - name: Package Application
#         run: |
#           echo "Packaging the application..."
#           mvn package -DskipTests
#         shell: bash
#       - name: Upload JAR file
#         uses: actions/upload-artifact@v3
#         with:
#           name: jar-file
#           path: target/financial-management-system-1.0-SNAPSHOT-jar-with-dependencies.jar

#   acceptance_tests:
#     needs: package
#     strategy:
#       matrix:
#         os: [ubuntu-latest]
#     runs-on: ${{ matrix.os }}
#     steps:
#       - uses: actions/checkout@v4
#       - name: Set up JDK 17
#         uses: actions/setup-java@v4
#         with:
#           java-version: '17'
#           distribution: 'temurin'
#           cache: maven
#       - name: Download JAR file
#         uses: actions/download-artifact@v3
#         with:
#           name: jar-file
#           path: target/
#       - name: List target directory
#         run: |
#           echo "Listing target directory..."
#           ls -la target/
#         shell: bash
#       - name: Start Server
#         if: runner.os == 'Linux'
#         run: |
#           echo "Starting the server..."
#           nohup java -jar target/financial-management-system-1.0-SNAPSHOT-jar-with-dependencies.jar &
#           SERVER_PID=$!
#           sleep 30
#         shell: bash

#       - name: Run Acceptance Tests
#         run: |
#           echo "Running acceptance tests..."
#           mvn verify
#         shell: bash
#       - name: Stop Server
#         if: runner.os == 'Linux'
#         run: |
#           echo "Stopping the server..."
#           if [ -n "$SERVER_PID" ]; then
#             kill $SERVER_PID
#           fi
#         shell: bash

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  compile:
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Install eodsql JAR
        run: |
          mvn install:install-file \
              -Dfile=lib/eodsql.jar \
              -DgroupId=net.lemnik \
              -DartifactId=eodsql \
              -Dversion=2.2 \
              -Dpackaging=jar

      - name: Compile Application
        run: |
          echo "Compiling the application..."
          mvn clean compile
        shell: bash

  unit_tests:
    needs: compile
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Run Unit Tests
        run: |
          echo "Running unit tests..."
          mvn test
        shell: bash

  package:
    needs: unit_tests
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Package Application
        run: |
          echo "Packaging the application..."
          mvn package -DskipTests
        shell: bash

      - name: Upload JAR file
        uses: actions/upload-artifact@v3
        with:
          name: jar-file
          path: target/financial-management-system-1.0-SNAPSHOT-jar-with-dependencies.jar

  acceptance_tests:
    needs: package
    strategy:
      matrix:
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Download JAR file
        uses: actions/download-artifact@v3
        with:
          name: jar-file
          path: target/

      - name: List target directory
        run: |
          echo "Listing target directory..."
          ls -la target/
        shell: bash

      - name: Start Server
        if: runner.os == 'Linux'
        run: |
          echo "Starting the server..."
          nohup java -jar target/financial-management-system-1.0-SNAPSHOT-jar-with-dependencies.jar &
          SERVER_PID=$!
          sleep 30
        shell: bash

      - name: Run Acceptance Tests
        run: |
          echo "Running acceptance tests..."
          mvn verify
        shell: bash

      - name: Stop Server
        if: runner.os == 'Linux'
        run: |
          echo "Stopping the server..."
          if [ -n "$SERVER_PID" ]; then
            kill $SERVER_PID
          fi
        shell: bash
