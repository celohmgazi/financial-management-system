name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    # Set up a matrix to run on both Linux and Windows environments
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    # Use the current operating system from the matrix
    runs-on: ${{ matrix.os }}

    steps:
      # Check out the repository
      - uses: actions/checkout@v4
      
      # Set up JDK 17
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      # Compile the application
      - name: Compile Application
        run: |
          echo "Compiling the application..."
          mvn clean compile
        shell: bash

      # Check dependencies
      - name: Check Dependencies
        run: |
          echo "Checking dependencies..."
          mvn dependency:resolve
        shell: bash

      # Package the application
      - name: Package Application
        run: |
          echo "Packaging the application..."
          mvn package -DskipTests
        shell: bash

      # Start server (only on Linux, as Windows handling differs)
      - name: Start Server
        if: runner.os == 'Linux'
        run: |
          echo "Starting the server..."
          nohup java -jar target/financial-management-system-1.0-SNAPSHOT-jar-with-dependencies.jar &
          SERVER_PID=$!
          sleep 5
        shell: bash

      # Start server (Windows version)
      - name: Start Server (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "Starting the server..."
          Start-Process -NoNewWindow -FilePath "java" -ArgumentList "-jar target/financial-management-system-1.0-SNAPSHOT-jar-with-dependencies.jar"
          Start-Sleep -s 5
        shell: powershell

      # Run tests
      - name: Run Tests
        run: |
          echo "Running tests..."
          mvn test
        shell: bash

      # Stop the server (Linux)
      - name: Stop Server
        if: runner.os == 'Linux'
        run: |
          echo "Stopping the server..."
          if [ -n "$SERVER_PID" ]; then
            kill $SERVER_PID
          fi
        shell: bash

      # Stop server (Windows)
      - name: Stop Server (Windows)
        if: runner.os == 'Windows'
        run: |
          echo "Stopping the server..."
          Stop-Process -Name java
        shell: powershell

      # Optional: Upload the dependency graph for security alerts
      - name: Update dependency graph
        uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

